@using blazor.wa.tbd.Services
@using blazor.wa.tbd.Infrastructure
<div class="top-row ps-3 navbar navbar-dark">
    <div class="container-fluid">
        <a class="navbar-brand" href="">Water, Drink Water</a>
        <button title="Navigation menu" class="navbar-toggler" @onclick="ToggleNavMenu">
            <span class="navbar-toggler-icon"></span>
        </button>
    </div>
</div>

<div class="@NavMenuCssClass nav-scrollable" @onclick="ToggleNavMenu">
    <nav class="flex-column">
        <AuthorizeView>
            <NotAuthorized>
                <div class="nav-item px-3">
                    <NavLink class="nav-link" href="" Match="NavLinkMatch.All">
                        <span class="bi bi-house-door-fill-nav-menu" aria-hidden="true"></span> Home
                    </NavLink>
                </div>
            </NotAuthorized>

            <Authorized>
                <div class="nav-item d-flex justify-content-center pb-4">
                    @if (Percentage is { } percentageValue)
                    {
                        <LiquidGauge Percentage="@percentageValue"/>
                    }
                </div>
                <div class="nav-item px-3">
                    <NavLink class="nav-link" href="/log" Match="NavLinkMatch.All">
                        <span class="bi bi-journal-arrow-down-nav-menu" aria-hidden="true"></span> Log
                    </NavLink>
                </div>

                <div class="nav-item px-3">
                    <NavLink class="nav-link" href="/preferences" Match="NavLinkMatch.All">
                        <span class="bi bi-gear-fill-nav-menu" aria-hidden="true"></span> Preferences
                    </NavLink>
                </div>

                <div class="nav-item px-3" @onclick="@(async () => await Logout())">
                    <NavLink class="nav-link" href="#">
                        Logout
                    </NavLink>
                </div>
            </Authorized>
        </AuthorizeView>
    </nav>
</div>

@code {
    private bool collapseNavMenu = true;

    private string? NavMenuCssClass => collapseNavMenu ? "collapse" : null;

    [Inject] private AuthService AuthService { get; set; } = null!;
    [Inject] private UserService UserService { get; set; } = null!;

    private bool Indeterminate { get; set; } = true;
    private int? Percentage { get; set; } = 0;

    protected override async Task OnInitializedAsync()
    {
        Percentage = await UserService.GetConsumptionPercentage();

        Indeterminate = false;
    }

    private async Task Logout()
    {
        await AuthService.Logout();

        StateHasChanged();
    }

    private void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }

}