@using blazor.wa.tbd.Services
@implements IDisposable
@inject UserService UserService

<CascadingValue Value="this">
    @ChildContent
</CascadingValue>

@code {
    public ConsumptionContext Context { get; private set; } = new();
    [Parameter] public RenderFragment? ChildContent { get; set; }

    public async Task LogConsumption(int fluidOuncesConsumed)
    {
        if (await UserService.LogConsumption(fluidOuncesConsumed))
        {
            await UpdateCurrentPercentage();
        }
    }

    public async Task RefreshContext()
    {
        await UpdateCurrentPercentage();
    }

    protected override async Task OnInitializedAsync()
    {
        await UpdateCurrentPercentage();

        Context.OnStateChange += StateHasChanged;
    }

    private async Task UpdateCurrentPercentage()
    {
        var percentage = await UserService.GetConsumptionPercentage();

        Context.SetPercentage(percentage);
    }

    public void Dispose() => Context.OnStateChange -= StateHasChanged;
}